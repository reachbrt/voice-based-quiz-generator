#!/bin/bash

# Complete deployment and run script for Voice-Based Quiz Generator
# This script will push to GitHub and run the application locally

echo "üé§ Voice-Based Quiz Generator - Deploy & Run"
echo "============================================="

# Check if we're in the right directory
if [ ! -f "app.py" ]; then
    echo "‚ùå Error: app.py not found. Please run this script from the project directory."
    echo "Current directory: $(pwd)"
    echo "Expected directory: /Users/bharat/Projects/Voice-Based Quiz Generator"
    exit 1
fi

echo "‚úÖ Found project files in: $(pwd)"

# Step 1: Git Setup and Push to GitHub
echo ""
echo "üì¶ Step 1: Setting up Git repository..."

# Initialize git if not already done
if [ ! -d ".git" ]; then
    echo "üîß Initializing Git repository..."
    git init
    git branch -M main
else
    echo "‚úÖ Git repository already exists"
fi

# Add all files
echo "üìù Adding files to Git..."
git add .

# Check if there are changes to commit
if git diff --staged --quiet; then
    echo "‚ÑπÔ∏è  No new changes to commit"
else
    echo "üíæ Committing changes..."
    git commit -m "Voice-Based Quiz Generator: Complete Implementation

üé§ AI-Powered Voice-Based Quiz System

‚ú® Features:
‚Ä¢ Streamlit web application with intuitive UI
‚Ä¢ Multi-format document processing (PDF, DOCX, TXT)
‚Ä¢ OpenAI GPT-powered question generation
‚Ä¢ Voice interaction with speech recognition and TTS
‚Ä¢ Real-time performance tracking and analytics
‚Ä¢ Adaptive difficulty adjustment
‚Ä¢ Session export and data management
‚Ä¢ Comprehensive error handling

üõ† Technical Stack:
‚Ä¢ Frontend: Streamlit
‚Ä¢ AI: OpenAI GPT-3.5/4
‚Ä¢ Voice: Google Speech Recognition + gTTS
‚Ä¢ Documents: PyPDF2, python-docx
‚Ä¢ Audio: pygame, streamlit-audio-recorder
‚Ä¢ Analytics: pandas, plotly

üìö Documentation:
‚Ä¢ Complete setup guides
‚Ä¢ Installation instructions
‚Ä¢ Contributing guidelines
‚Ä¢ CI/CD pipeline with GitHub Actions
‚Ä¢ Cross-platform support

üöÄ Ready for production use and portfolio showcase!"
fi

# Add remote if not exists
if ! git remote get-url origin &> /dev/null; then
    echo "üîó Adding GitHub remote..."
    git remote add origin https://github.com/reachbrt/voice-based-quiz-generator.git
else
    echo "‚úÖ GitHub remote already configured"
fi

# Push to GitHub
echo "üöÄ Pushing to GitHub..."
if git push -u origin main; then
    echo "‚úÖ Successfully pushed to GitHub!"
    echo "üåê Repository: https://github.com/reachbrt/voice-based-quiz-generator"
else
    echo "‚ö†Ô∏è  Push failed. You may need to authenticate with GitHub first."
    echo "Try: gh auth login"
    echo "Or set up SSH keys: https://docs.github.com/en/authentication/connecting-to-github-with-ssh"
fi

# Step 2: Install Dependencies and Run Application
echo ""
echo "üì¶ Step 2: Installing dependencies..."

# Check Python version
python_version=$(python3 --version 2>&1)
echo "üêç Python version: $python_version"

# Install basic dependencies first
echo "üì• Installing basic dependencies..."
if pip3 install streamlit python-dotenv; then
    echo "‚úÖ Basic dependencies installed"
else
    echo "‚ùå Failed to install basic dependencies"
    echo "Try: python3 -m pip install streamlit python-dotenv"
fi

# Step 3: Run Demo
echo ""
echo "üéÆ Step 3: Running demo..."
echo "This will run the demo version without requiring API keys"
echo ""

if python3 demo.py; then
    echo "‚úÖ Demo completed successfully!"
else
    echo "‚ùå Demo failed to run"
fi

# Step 4: Setup for Full Application
echo ""
echo "üîß Step 4: Setting up full application..."

# Create .env file if it doesn't exist
if [ ! -f ".env" ]; then
    echo "üìù Creating .env file..."
    cp .env.example .env
    echo "‚ö†Ô∏è  Please edit .env file and add your OpenAI API key:"
    echo "   OPENAI_API_KEY=your_actual_api_key_here"
else
    echo "‚úÖ .env file already exists"
fi

# Install full dependencies
echo "üì• Installing full dependencies..."
if pip3 install -r requirements.txt; then
    echo "‚úÖ All dependencies installed successfully!"
    
    # Step 5: Run Full Application
    echo ""
    echo "üöÄ Step 5: Starting full application..."
    echo "The application will open in your browser at http://localhost:8501"
    echo ""
    echo "Press Ctrl+C to stop the application"
    echo ""
    
    # Check if .env has API key
    if grep -q "your_openai_api_key_here" .env 2>/dev/null; then
        echo "‚ö†Ô∏è  Warning: Please add your OpenAI API key to .env file for full functionality"
        echo "You can still use the app for document processing and manual quiz creation"
        echo ""
    fi
    
    # Start Streamlit
    streamlit run app.py
    
else
    echo "‚ùå Failed to install full dependencies"
    echo ""
    echo "Manual installation steps:"
    echo "1. pip3 install -r requirements.txt"
    echo "2. Edit .env file with your OpenAI API key"
    echo "3. streamlit run app.py"
fi

echo ""
echo "üéâ Deployment and setup complete!"
echo ""
echo "üìö Quick Reference:"
echo "‚Ä¢ Repository: https://github.com/reachbrt/voice-based-quiz-generator"
echo "‚Ä¢ Demo: python3 demo.py"
echo "‚Ä¢ Full app: streamlit run app.py"
echo "‚Ä¢ Test setup: python3 test_installation.py"
echo ""
echo "üìñ Documentation:"
echo "‚Ä¢ README.md - Main documentation"
echo "‚Ä¢ INSTALL.md - Installation guide"
echo "‚Ä¢ SETUP_INSTRUCTIONS.md - Complete setup guide"
